# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isLeafNode(self,root:TreeNode) -> int:
        return (not root.left) and (not root.right)
        
    def binaryTreePaths(self, root: TreeNode) -> List[str]:
        ret  = []
        if (not root): return []
        #当前节点为leaf
        if self.isLeafNode(root):
            return  [str(root.val)]
        else:
            if root.left:
                #左子为leaf
                if self.isLeafNode(root.left) :
                    ret.append( str(root.val)+'->'+str(root.left.val))
                else:
                    #左子不为leaf，递归
                    for i in self.binaryTreePaths(root.left):
                        ret.append( str(root.val) + '->' + i)
            # 右子
            if root.right:
               #右子为leaf
                if self.isLeafNode(root.right) :
                    ret.append( str(root.val)+'->'+str(root.right.val))
                else:
                   #右子不为leaf,递归
                    for i in self.binaryTreePaths(root.right):
                        ret.append( str(root.val) + '->' + i)
            return ret
