首先计算得到第一行和第一列每个格点上的路径和，再按列或按行来进行处理，每次只记录一行或一列的数据，

class Solution(object):
    def minPathSum(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        m = len(grid)
        n = len(grid[0])
        for i in range(1, m):#计算第一行和第一列各格点的路径和
            grid[i][0] += grid[i-1][0]
        res = [grid[0][0]]
        for i in range(1, n):
            res.append(res[-1] + grid[0][i])#记录每一列格点最小路径和的数组
        for i in range(1, m):
            res[0] = grid[i][0]#对于每一列，需要更新数组第一个格点的数值
            for j in range(1, n):
                res[j] = min(res[j-1], res[j]) + grid[i][j]#保存较小的路径和
        return res[-1]

