首先遍历time,将各元素对60取余数,保存在list1中
此时list1中的数都是大于等于0,小于60的,只要list1中某两个数相加等于60,或者某两个数都为0,那么即符合题意.
巧用了一下字典,这个想法来自于两数之和.dict1中,键是(60-list1[i]),值是对应的次数.
遍历list1时,要做两件事, 首先判断item是否已经在dict1,如果item已经在dict1中,说明之前有几个数加上这个item等于60,到底有几个呢?看dict1中item对应的值,则count加上即可.如果item不在dict1中,则进行下一步.
然后进行判断.如果item不为0,则判断60-item是否在dict1中,如果没有的话,则建立键值对,值为1.如果60-item已经在dict1中,则对应的键值 += 1.如果item为0的话,那么判断0是否在dict1中,如果没有的话,则建立键值对,值为1.如果0已经在dict1中,则对应的键值 += 1

class Solution(object):
    def numPairsDivisibleBy60(self, time):
        """
        :type time: List[int]
        :rtype: int
        """
        n = len(time)
        list1 = []
        for item in time:
            a = item%60
            list1.append(a)

        dict1 = {}

        count = 0

        for item in list1:
            if item in dict1:
                count += dict1[item]
            
            if item == 0:
                if item in dict1:
                    dict1[0] += 1
                else:
                    dict1[0] = 1
            elif item != 0:
                if (60-item) in dict1:
                    dict1[60-item] += 1
                else:
                    dict1[60-item] = 1
                    
        return count
