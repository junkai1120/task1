首先，我们对 nums 数组从左到右做线性遍历，当遇到 target 时中止。
如果我们没有中止过，那么 target 不存在，我们可以返回“错误代码” [-1, -1] 。
如果我们找到了有效的左端点坐标，我们可以坐第二遍线性扫描，但这次从右往左进行。
这一次，第一个遇到的 target 将是最右边的一个（因为最左边的一个存在，所以一定会有一个最右边的 target）。我们接下来只需要返回这两个坐标。

class Solution:
    def searchRange(self, nums, target):
        # find the index of the leftmost appearance of `target`. if it does not
        # appear, return [-1, -1] early.
        for i in range(len(nums)):
            if nums[i] == target:
                left_idx = i
                break
        else:
            return [-1, -1]

        # find the index of the rightmost appearance of `target` (by reverse
        # iteration). it is guaranteed to appear.
        for j in range(len(nums)-1, -1, -1):
            if nums[j] == target:
                right_idx = j
                break

        return [left_idx, right_idx]

