# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def mergeTwoLists(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        cur1, cur2, dummy = l1, l2, ListNode(0)
        cur = dummy
        while cur1 and cur2:                 #如果cur1和cur2都不是空值
            if cur1.val <= cur2.val:            
                cur.next = cur1
                cur1 = cur1.next           
            else:
                cur.next = cur2
                cur2 = cur2.next            #从前往后比较两个链表的值，小的赋给cur
            cur = cur.next                  
        if cur1:
            cur.next = cur1                 #cur2为空，则cur1就是cur
        if cur2:
            cur.next = cur2                 #cur1为空，则cur2就是cur
        return dummy.next
